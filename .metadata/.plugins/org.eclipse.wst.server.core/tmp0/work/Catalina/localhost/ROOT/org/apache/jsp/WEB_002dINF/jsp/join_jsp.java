/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-25 06:23:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<style>\r\n");
      out.write("\t* { margin: 0px; padding: 0px;}\r\n");
      out.write("\tbody { font-family: 'Noto Sans KR', sans-serif;}\r\n");
      out.write("\t#container { width: 100%; height: 100vh; margin: 0 auto; text-align: center; background: #2B3032} \r\n");
      out.write("\t#container h1{padding: 70px; color: #dedede;}\r\n");
      out.write("\t#container form {text-align: center; margin-top: 100px;}\r\n");
      out.write("\t#container form input { border: none; width: 480px; height: 45px; margin-bottom: 20px; border-radius : 10px;}\r\n");
      out.write("\t#button { background : #8e8e8e;  width: 500px; margin-top : 30px; font-family:나눔고딕;}\r\n");
      out.write("\t#button:hover{ background : #cecece; color : 2e2e2e; border: 1px solid white; font-weight: bold;\r\n");
      out.write("\ttransition: all 0.5s;\r\n");
      out.write("    \ttransition-timing-function:ease; border-radius: 0px;}\r\n");
      out.write("\t.input { padding-left : 20px; font-family:나눔고딕;}\r\n");
      out.write("\tspan { color: red; font-weight: bold; font-family:나눔고딕;}\r\n");
      out.write("\thr { border : 1px solid #4e4e4e}\r\n");
      out.write("\ta { text-decoration:none; font-size : 12px; margin-top : -10px;font-weight : bold; color : #dedede; font-family: 'Noto Sans KR', sans-serif;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"container\">\r\n");
      out.write("\t\t<h1>회원가입</h1>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<form id=\"frm\"action=\"/join\" method=\"post\" onsubmit=\"return chk()\">\r\n");
      out.write("\t\t\t<div><label><input type=\"text\" class=\"input\" name=\"user_id\" placeholder=\"아이디\" required value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></label></div>\r\n");
      out.write("\t\t\t<div><label><input type=\"password\" class=\"input\" name=\"user_pw\" placeholder=\"비밀번호\"></label></div>\r\n");
      out.write("\t\t\t<div><label><input type=\"password\" class=\"input\" name=\"user_pwre\" placeholder=\"확인 비밀번호\"></label></div>\r\n");
      out.write("\t\t\t<div><label><input type=\"text\" class=\"input\"name=\"nm\" placeholder=\"이름\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.nm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></label></div>\r\n");
      out.write("\t\t\t<div><input type=\"email\"class=\"input\" name=\"email\" placeholder=\"이메일\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></div>\r\n");
      out.write("\t\t\t<div><input id=\"button\" type=\"submit\" value=\"회원가입\"></div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<div><h3><span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></h3></div>\r\n");
      out.write("\t\t<a href=\"/login\">뒤로가기</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction chk()\r\n");
      out.write("\t\t{\t\r\n");
      out.write("\t\t\tif(frm.user_id.value.length < 8) // id 검증(글자수)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert('아이디는 8글자 이상이 되어야 합니다.')\r\n");
      out.write("\t\t\t\tfrm.user_id.focus()\r\n");
      out.write("\t\t\t\treturn false\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\telse if(frm.user_pw.value.length < 8) // pw 검증(글자수)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\r\n");
      out.write("\t\t\t\talert('비밀번호는 8글자 이상이 되어야 합니다.')\r\n");
      out.write("\t\t\t\tfrm.user_pw.focus()\r\n");
      out.write("\t\t\t\treturn false\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\telse if(frm.user_pw.value != frm.user_pwre.value) // pw 검증(확인)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert('비밀번호를 확인해 주세요.')\r\n");
      out.write("\t\t\t\tfrm.user_pw.focus()\r\n");
      out.write("\t\t\t\treturn false\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(frm.nm.value.length > 0) // 이름 검증\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tconst korean = /[^가-힣]/\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(korean.test(frm.nm.value))\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\talert('이름은 한글만 입력해 주세요.')\r\n");
      out.write("\t\t\t\t\tfrm.nm.focus()\r\n");
      out.write("\t\t\t\t\treturn false\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(frm.email.value.length > 0) // 이메일 검증\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tconst email = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(!email.test(frm.email.value))\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\talert('이메일을 확인해 주세요.')\r\n");
      out.write("\t\t\t\t\tfrm.email.focus()\r\n");
      out.write("\t\t\t\t\treturn false\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
